<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manage.dao.mapper.BalanceRecordMapper" >
  <resultMap id="BaseResultMap" type="com.manage.dao.model.BalanceRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="memberId" property="memberid" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="businessId" property="businessid" jdbcType="BIGINT" />
    <result column="beforeAmount" property="beforeamount" jdbcType="DOUBLE" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="afterAmount" property="afteramount" jdbcType="DOUBLE" />
    <result column="useTime" property="usetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, memberId, type, businessId, beforeAmount, amount, afterAmount, useTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.manage.dao.model.BalanceRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_balance_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pager != null" >
      limit #{pager.begin} , #{pager.end}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_balance_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_balance_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.manage.dao.model.BalanceRecordExample" >
    delete from t_balance_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.manage.dao.model.BalanceRecord" useGeneratedKeys="true" keyProperty="id" >
    insert into t_balance_record (id, memberId, type, 
      businessId, beforeAmount, amount, 
      afterAmount, useTime)
    values (#{id,jdbcType=BIGINT}, #{memberid,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, 
      #{businessid,jdbcType=BIGINT}, #{beforeamount,jdbcType=DOUBLE}, #{amount,jdbcType=DOUBLE}, 
      #{afteramount,jdbcType=DOUBLE}, #{usetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.manage.dao.model.BalanceRecord" useGeneratedKeys="true" keyProperty="id" >
    insert into t_balance_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="businessid != null" >
        businessId,
      </if>
      <if test="beforeamount != null" >
        beforeAmount,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="afteramount != null" >
        afterAmount,
      </if>
      <if test="usetime != null" >
        useTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="businessid != null" >
        #{businessid,jdbcType=BIGINT},
      </if>
      <if test="beforeamount != null" >
        #{beforeamount,jdbcType=DOUBLE},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="afteramount != null" >
        #{afteramount,jdbcType=DOUBLE},
      </if>
      <if test="usetime != null" >
        #{usetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.manage.dao.model.BalanceRecordExample" resultType="java.lang.Integer" >
    select count(*) from t_balance_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_balance_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.memberid != null" >
        memberId = #{record.memberid,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.businessid != null" >
        businessId = #{record.businessid,jdbcType=BIGINT},
      </if>
      <if test="record.beforeamount != null" >
        beforeAmount = #{record.beforeamount,jdbcType=DOUBLE},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.afteramount != null" >
        afterAmount = #{record.afteramount,jdbcType=DOUBLE},
      </if>
      <if test="record.usetime != null" >
        useTime = #{record.usetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_balance_record
    set id = #{record.id,jdbcType=BIGINT},
      memberId = #{record.memberid,jdbcType=BIGINT},
      type = #{record.type,jdbcType=VARCHAR},
      businessId = #{record.businessid,jdbcType=BIGINT},
      beforeAmount = #{record.beforeamount,jdbcType=DOUBLE},
      amount = #{record.amount,jdbcType=DOUBLE},
      afterAmount = #{record.afteramount,jdbcType=DOUBLE},
      useTime = #{record.usetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.manage.dao.model.BalanceRecord" >
    update t_balance_record
    <set >
      <if test="memberid != null" >
        memberId = #{memberid,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="businessid != null" >
        businessId = #{businessid,jdbcType=BIGINT},
      </if>
      <if test="beforeamount != null" >
        beforeAmount = #{beforeamount,jdbcType=DOUBLE},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="afteramount != null" >
        afterAmount = #{afteramount,jdbcType=DOUBLE},
      </if>
      <if test="usetime != null" >
        useTime = #{usetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.manage.dao.model.BalanceRecord" >
    update t_balance_record
    set memberId = #{memberid,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR},
      businessId = #{businessid,jdbcType=BIGINT},
      beforeAmount = #{beforeamount,jdbcType=DOUBLE},
      amount = #{amount,jdbcType=DOUBLE},
      afterAmount = #{afteramount,jdbcType=DOUBLE},
      useTime = #{usetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>